name: Build GKLS

on:
  push:
    branches: [ "main", "dev", "opti"]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build-x86-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get install python3
          sudo apt-get install -y python3-dev
          python -m pip install --upgrade pip
          python -m pip install build
      
      # Runs a single command using the runners shell
      - name: Install gkls
        run: |
          python -m build --sdist --wheel
          pip install .
          python test.py
      
      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: linux-artifact
          path: |
            dist/*.whl
      
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: "Release ${{ github.ref }}"
          files: |
            dist/*.whl

  build_wheels_unix:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: False
      matrix:
        os: [ ubuntu-latest ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Build wheels
        env:
          # only build CPython-3.9+ and skip 32-bit builds
          CIBW_BUILD: cp39-* cp310-* cp311-* cp312-* cp313-*
          CIBW_SKIP: "*-manylinux_i686 *-musllinux*"
          # use latest build
          CIBW_MANYLINUX_X86_64_IMAGE: quay.io/pypa/manylinux2014_x86_64
          CIBW_BUILD_VERBOSITY: 3
        run: |
          python -m pip install -U pip cibuildwheel
          python -m cibuildwheel --output-dir dist
          ls -R dist

      - name: Place wheels in artifacts folder
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}
          path: ./dist/*.whl
  
  # build-arm-macos:
  #   runs-on: macos-latest
  #   needs: build-x86-linux
  #   steps:
  #     - uses: actions/checkout@v4
      
  #     - name: Install dependencies
  #       run: |
  #         brew uninstall python --ignore-dependencies
  #         brew cleanup python
  #         python -m pip install --upgrade pip
  #         python -m pip install build

  #     - name: Build GKLS
  #       run: |
  #         python -m build --sdist --wheel
      
  #     - name: Download artifact
  #       uses: actions/download-artifact@master
  #       with:
  #         name: linux-artifact
      
  #     - name: Release
  #       uses: softprops/action-gh-release@v2
  #       if: startsWith(github.ref, 'refs/tags/')
  #       with:
  #         body: "Release ${{ github.ref }}"
  #         files: |
  #           dist/*.whl